
.. _program_listing_file_src_controller_serialdevicecontroller.h:

Program Listing for File serialdevicecontroller.h
=================================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_controller_serialdevicecontroller.h>` (``src/controller/serialdevicecontroller.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * SerialDevice - Utility class for managing devices connected via USB/Bluetooth.
    */
   
   #ifndef SERIALDEVICE_H
   #define SERIALDEVICE_H
   
   #include <QSharedPointer>
   #include <QSerialPort>
   #include <QString>
   #include "model/sectionmapmodel.h"
   
   namespace PixelMaestroStudio {
       class SerialDeviceController {
           public:
               SerialDeviceController() = default;
               explicit SerialDeviceController(const QString& port_name);
               bool connect();
               bool disconnect();
               QSerialPort* get_device();
               int get_capacity() const;
               QString get_port_name() const;
               bool get_autoconnect() const;
               bool get_real_time_refresh_enabled() const;
               void set_autoconnect(const bool autoconnect);
               void set_capacity(const int capacity);
               void set_port_name(const QString &port_name);
               void set_real_time_update(const bool enabled);
   
               SectionMapModel* section_map_model = nullptr;
   
           private:
               bool autoconnect_ = false;
   
               const int baud_rate_ = 9600;
   
               int capacity_ = 1024;
   
               QString port_name_;
   
               bool real_time_updates_ = false;
   
               QSharedPointer<QSerialPort> serial_device_ = QSharedPointer<QSerialPort>(new QSerialPort());
       };
   }
   
   #endif // SERIALDEVICE_H
